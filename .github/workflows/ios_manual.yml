# This is a basic workflow that is manually triggered
name: iOS Klaatu Tests
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Experiment Branch'
        default: 'control'
        required: true
        type: string
      slug:
        description: 'Experiment Slug'
        default: 'an-awesome-experiment'
        required: true
        type: string
      user-facing-name:
        description: 'The user facing name'
        default: "An Awesome Experiment"
        required: false
        type: string
jobs:
  iOS-klaatu-tests:
    runs-on: macos-14-xlarge
    name: iOS Klaatu Tests
    steps:
      - name: Clone firefox-ios repo
        uses: actions/checkout@v4
        with:
            repository: jrbenny35/firefox-ios
            ref: "github-actions-update"
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Build and setup app
        run: |
          sh ./bootstrap.sh --force
          sh ./checkout.sh
          cd firefox-ios
          brew update
          pip3 install virtualenv pipenv
      - name: Install Nimbus CLI
        run: curl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/mozilla/application-services/main/install-nimbus-cli.sh | bash  
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'
      - name: Xcode Version
        run: xcodebuild -version
      - name: Build Focus (to debug)
        run: |
          cd focus-ios
          xcodebuild build-for-testing -scheme Focus -target XCUITest -configuration FocusDebug -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.2'
      - name: Build Firefox
        run: |
          cd firefox-ios
          xcodebuild clean build -scheme Fennec -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.2'
      - name: Run Tests
        run: |
          cd firefox-ios/firefox-ios-tests/Tests/ExperimentIntegrationTests
          pipenv install
          echo "RUNNING TESTS"
          EXPERIMENT_NAME="${{ inputs.user-facing-name }}" pipenv run pytest --experiment ${{ inputs.slug }} -k test_generic.py
          
